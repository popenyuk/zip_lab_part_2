Команда:
	Євгеній Молодцов
	Зеновій Попенюк

Відкривати даний файл краще під Notepad++.

Тестувалося під WSL та під MinGW - Msys2.

Приклад запуску однопоточної програми:
	mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE=Release && make && cd .. && rm -R build && cd bin &&  ./_5_one_thread ../conf_one_thread.txt && cd .. && rm -R bin

Приклад запуску багатопоточної програми:
	mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE=Release && make && cd .. && rm -R build && cd bin &&  ./_5_multi_thread ../conf_multiple_thread.txt && cd .. && rm -R bin

Також можна не вводити назву файлу конфігурації, проте тоді не забудьте добавити в папку bin файл config.txt.

Можливі наступні помилки:
	- Invalid argument. - програмі не вдалося знайти файл конфігурації.
	- Floating point exception (core dumped) - швидше за все програмі не вдалося відкрити файл, який ви вказали для зчитування.
	
Приклад файлу конфігурації:
	infile="../example/data.txt" 	- файл для зчитування
	out_by_a="result_by_name.txt"	- файл куди буде записаний результат виконання програми в алфавітному порядку
	out_by_n="result_by_number.txt"	- файл куди буде записаний результат виконання програми в порядку зменшення кількості слова в файлі
	threads=8						- кількість потоків для багатопоточної програми

Для встановлення всіх необхідних бібліотек python:
	cd script && pip install -r ./requirements.txt && cd ..

Для запуску скріпта спочатку необхідно запустити :
	mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE=Release && make && python3 ../script/script.py && cd .. && rm -R build && rm -R bin

Також для роботи скрипта Вам необхідно розархівувати файли в папці example!!! Для зміни файлу читання Вам необхідно відкрити файл script.py 
в папці script. В функції write_in_file змінити вхідний файл. Наприклад з open_file.write('infile="../example/data.txt"\n') на open_file.write('infile="../example/data1.txt"\n')

- якщо сталося виключення викличіть:
	cd .. && rm -R build 
	
Виконано з додатковим завданням на трьох комп'ютерах.

					|	Computer 1		|	Computer 2			|	Computer 3
					|					|						|
CPU					|	i5-7200U		|	i5-7500				|	i3-8100T 
					|					|						|
OS					|	Windows10(WSL)	|Windows 10(Virtual box)|	Windows 10(WSL)	
					|					|						|
Number of cores		|		2			|			4			|		2
					|					|						|		
Number of threads	|		4			|			4			|		4
					|					|						|		
Clock frequency		|	2.5 GHz			|		3.4 GHz			|		2.3 GHz
					|					|						|
Operative memory	|	16 Gb			|		8 Gb			|		4 Gb

Для більшої інформації Ви можете прочитати відповідні файли в папці results або у відповідному файлі, лабораторної роботи про власний комп'ютер. Тут наводимо тільки базаво необхідні характеристики.

	При меншій потужності процесора перший комп'ютер виконує однопоточний варіант швидше ніж потужніший другий комп'ютер. При цьому перший та другий рівні кешу ідентичні на цих двох комп'ютерах, а от третій 
на останньому більший на 3 мб. Можливо зв'язано такий виграш з ОС на якій запускалася програма - віртуальна машина на другому комп'ютері могла сповільнювати роботу програми. Хотілось би додати, що на комп'ютерах під ОС
Windows встановлені всі драйвера в правильній послідовності - chipset, материнка і т.д. Убунті, під віртуальною машиною, були надані всі доступні ресурси. Третій комп'ютер найменш потужній з трьох, тому на
ньому і виконується найповільніше. 
 
	Зі збільшенням числа потоків другий комп'ютер починає вигравати у першого. Особливо добре видно це на чотирьох потоках - кількості фізичних ядер другого комп'ютера. Крім того на другому комп'ютері
помітно кращий графік ніж на першому та третьому - при тестуванні різними засобами такими як pvs-studio чи valgrind - data race чи інших помилок не було найдено.
Деякі коефіцієнти(взято для першого типу даних):

																|	Computer1	|	Computer2	| 	Computer3
																|				|				|
T/T2(час виконання одного потоку до часу виконання двох потоків)|	1.12		|	1.65		|	1.14
																|				|				|
T/T3															|	1.09		|	1.45		|	1.08
																|				|				|
T/T4															|	1.06		|	1.83		|	1.06

	З коефіцієнтів можна побачити, що мати більшу кількість фізичних ядер, краще ніж мати таку ж кількість, але з врахуванням логічних ядер. Характеристики комп'ютерів були підібрані спеціальним чином, щоб вони були більш
менш еквівалентними. Також була охота потестувати програму на двохядерному комп'ютері без логічних ядер, проте стан жорсткого диску не дав цього здійснити. До того ж другий комп'ютер ми беремо
як еталонний. Не зважаючи на трохи поганий графік, присутність скачків графіку, буде вважати, що це через те, що ми запускали програму під віртуальною машиною. Графіки першого та другого 
комп'ютера дивні, є гіпотеза, що це через false sharing.
